#!/bin/bash
###################################################################################
#
# Notify command completion and exit status via pushover and notify-send
#
# uses pushover.sh from https://raw.githubusercontent.com/jnwatts/pushover.sh/master/pushover.sh
#
###################################################################################
#
# Copyright 2015 Jason Antman <jason@jasonantman.com> <http://www.jasonantman.com>
# Free for any use provided that patches are submitted back to me.
#
# The most recent version of this script is available at:
# <https://github.com/jantman/misc-scripts/blob/master/pushover>
#
###################################################################################
#
# EXAMPLES:
#
# pushover /bin/false
#  (sends failure notification)
#
# pushover /bin/true foo bar baz
#  (sends success notification)
#
###################################################################################
#
# Version 1.0.1
#
# CHANGELOG:
#
# * 1.0.1 2015-05-11 Jason Antman <jason@jasonantman.com>
#   * swith from env vars for pushover keys to ~/.config/pushover.conf
#
# * 1.0.0 2015-05-11 Jason Antman <jason@jasonantman.com>
#   * Initial public version
#
###################################################################################


if ! which pushover.sh > /dev/null 2>&1; then
    >&2 echo "ERROR: pushover.sh not found; please put in path (download from https://raw.githubusercontent.com/jnwatts/pushover.sh/master/pushover.sh)"
    exit 1
fi

stime=$(date '+%s')
$@
exitcode=$?
# timer
etime=$(date '+%s')
dt=$((etime - stime))
ds=$((dt % 60))
dm=$(((dt / 60) % 60))
dh=$((dt / 3600))
times=$(printf '%d:%02d:%02d' $dh $dm $ds)
# end timer
if [ "$exitcode" -eq 0 ]
then
    pushover.sh -p 0 -t "Command Succeeded" "succeeded in ${times} on $(hostname): $@ (in $(pwd))"
    echo "(sent pushover success notification)"
    if which notify-send 2>&1 > /dev/null; then
        notify-send "Command Succeeded" "succeeded in ${times}: $@ (in $(pwd))"
    fi
else
    pushover.sh -p 0 -s falling -t "Command Failed" "failed in ${times} (exit $exitcode) on $(hostname): $@ (in $(pwd))"
    echo "(sent pushover failure notification)"
    if which notify-send 2>&1 > /dev/null; then
        notify-send "Command Failed" "failed in ${times} (exit $exitcode): $@ (in $(pwd))"
    fi
fi
